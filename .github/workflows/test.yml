name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --with dev,format

    - name: Run linting
      run: |
        poetry run ruff check .
        poetry run mypy .

    - name: Run tests
      run: poetry run pytest tests/ -v --tb=short
      env:
        # Integration tests will be skipped if API keys are not provided
        DOMAIN: ${{ secrets.DOMAIN }}
        CHAT_KEY: ${{ secrets.CHAT_KEY }}
        COMPLETION_KEY: ${{ secrets.COMPLETION_KEY }}
        APP_KEY: ${{ secrets.APP_KEY }}
        WORKFLOW_KEY: ${{ secrets.WORKFLOW_KEY }}
