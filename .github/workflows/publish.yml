name: Publish

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
      with:
        token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      run: poetry install --with dev,format

    - name: Run tests
      run: |
        poetry run ruff check .
        poetry run mypy .
        poetry run pytest tests/ -v --tb=short
      env:
        # Integration tests will be skipped if API keys are not provided
        DOMAIN: ${{ secrets.DOMAIN }}
        CHAT_KEY: ${{ secrets.CHAT_KEY }}
        COMPLETION_KEY: ${{ secrets.COMPLETION_KEY }}
        APP_KEY: ${{ secrets.APP_KEY }}
        WORKFLOW_KEY: ${{ secrets.WORKFLOW_KEY }}

    - name: Build package
      run: poetry build

    - name: Publish to PyPI
      run: poetry publish
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}

    - name: Create PR to sync main to develop
      run: |
        gh pr create \
          --base develop \
          --head main \
          --title "Sync main to develop after release" \
          --body "Auto-generated PR to sync main branch changes back to develop after release." \
          || echo "PR already exists or no changes to sync"
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
